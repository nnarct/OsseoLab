"""add tables for case files, versions, planes; rename last_updated to updated_at

Revision ID: e14566cb07cd
Revises: c0b43fda9dbb
Create Date: 2025-05-06 11:51:32.548533

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e14566cb07cd'
down_revision = 'c0b43fda9dbb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('case_file_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('case_file_id', sa.UUID(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('uploaded_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['case_file_id'], ['case_files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('case_file_groups',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('case_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('case_file_group_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('group_id', sa.UUID(), nullable=False),
    sa.Column('case_file_id', sa.UUID(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['case_file_id'], ['case_files.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['case_file_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('case_files', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('current_version_id', sa.UUID(), nullable=True))
        batch_op.create_foreign_key(None, 'case_file_versions', ['current_version_id'], ['id'])

    op.execute("UPDATE case_files SET updated_at = NOW()")

    with op.batch_alter_table('case_files', schema=None) as batch_op:
        batch_op.alter_column('updated_at', nullable=False)
        batch_op.drop_column('last_updated')

    with op.batch_alter_table('cases', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))

    op.execute("UPDATE cases SET updated_at = NOW()")

    with op.batch_alter_table('cases', schema=None) as batch_op:
        batch_op.alter_column('updated_at', nullable=False)
        batch_op.drop_column('last_updated')

    with op.batch_alter_table('doctors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))

    op.execute("UPDATE doctors SET updated_at = NOW()")

    with op.batch_alter_table('doctors', schema=None) as batch_op:
        batch_op.alter_column('updated_at', nullable=False)
        batch_op.drop_column('last_updated')

    with op.batch_alter_table('technicians', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))

    op.execute("UPDATE technicians SET updated_at = NOW()")

    with op.batch_alter_table('technicians', schema=None) as batch_op:
        batch_op.alter_column('updated_at', nullable=False)
        batch_op.drop_column('last_updated')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))

    op.execute("UPDATE \"user\" SET updated_at = NOW()")

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('updated_at', nullable=False)
        batch_op.drop_column('last_updated')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('technicians', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('doctors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('cases', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('case_files', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('current_version_id')
        batch_op.drop_column('updated_at')

    op.drop_table('case_file_group_items')
    op.drop_table('case_file_groups')
    op.drop_table('case_file_versions')
    # ### end Alembic commands ###
